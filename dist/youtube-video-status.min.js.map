{"version":3,"sources":["youtube-video-status.min.js"],"names":["_interopRequireDefault","obj","__esModule","default","getResourceText","vid","selectors","options","$","$text","_regenerator2","async","_context","prev","next","main","sub","uri","headers","accept-language","qs","v","transform","body","_cheerio2","load","awrap","_requestPromise2","sent","_ramda2","pipe","invoker","abrupt","evolve","stop","this","status","_context2","detectStatus","combined","isPrivate","test","isAccessible","both","complement","isUnavailable","either","cond","always","T","Object","defineProperty","exports","value","undefined","_regenerator","require","_ramda","_requestPromise","_cheerio","video"],"mappings":"AAAA,YAuBA,SAASA,wBAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAEvF,QAASG,iBAAgBC,GACvB,GAAIC,GAAWC,EAASC,EAAGC,CAC3B,OAAOC,eAAAA,WAAsBC,MAAM,SAA0BC,GAC3D,OACE,OAAQA,EAASC,KAAOD,EAASE,MAC/B,IAAK,GAcH,MAbAR,IACES,KAAM,uBACNC,IAAK,2BAEPT,GACEU,IAAK,gCACLC,SAAWC,kBAAmB,MAC9BC,IAAMC,EAAGhB,GACTiB,UAAW,SAAmBC,GAC5B,MAAOC,WAAAA,WAAkBC,KAAKF,KAGlCX,EAASE,KAAO,EACTJ,cAAAA,WAAsBgB,OAAM,EAAIC,iBAAAA,YAA0BpB,GAEnE,KAAK,GAGH,MAFAC,GAAII,EAASgB,KACbnB,EAAQoB,QAAAA,WAAgBC,KAAKtB,EAAGqB,QAAAA,WAAgBE,QAAQ,EAAG,SACpDnB,EAASoB,OAAO,SAAUH,QAAAA,WAAgBI,QAASlB,KAAMN,EAAOO,IAAKP,GAASH,GAEvF,KAAK,GACL,IAAK,MACH,MAAOM,GAASsB,SAGrB,KAAMC,MAGX,QAASC,QAAO/B,GACd,GAAIJ,EACJ,OAAOS,eAAAA,WAAsBC,MAAM,SAAiB0B,GAClD,OACE,OAAQA,EAAUxB,KAAOwB,EAAUvB,MACjC,IAAK,GAEH,MADAuB,GAAUvB,KAAO,EACVJ,cAAAA,WAAsBgB,MAAMtB,gBAAgBC,GAErD,KAAK,GAEH,MADAJ,GAAMoC,EAAUT,KACTS,EAAUL,OAAO,SAAUM,aAAarC,GAEjD,KAAK,GACL,IAAK,MACH,MAAOoC,GAAUH,SAGtB,KAAMC,MAGX,QAASG,cAAarC,GACpB,GAAIsC,GAAWtC,EAAIc,KAAOd,EAAIe,IAC1BwB,EAAYX,QAAAA,WAAgBY,KAAK,YACjCC,EAAeb,QAAAA,WAAgBc,KAAKd,QAAAA,WAAgBY,KAAK,gBAAiBZ,QAAAA,WAAgBe,WAAWf,QAAAA,WAAgBY,KAAK,YAC1HI,EAAgBhB,QAAAA,WAAgBiB,OAAOjB,QAAAA,WAAgBY,KAAK,cAAeZ,QAAAA,WAAgBc,KAAKd,QAAAA,WAAgBY,KAAK,gBAAiBZ,QAAAA,WAAgBY,KAAK,WAE/J,OAAOZ,SAAAA,WAAgBkB,OAAOP,EAAWX,QAAAA,WAAgBmB,OAAO,aAAcN,EAAcb,QAAAA,WAAgBmB,OAAO,gBAAiBH,EAAehB,QAAAA,WAAgBmB,OAAO,iBAAkBnB,QAAAA,WAAgBoB,EAAGpB,QAAAA,WAAgBmB,OAAO,cAAcT,GApFtPW,OAAOC,eAAeC,QAAS,cAC7BC,OAAO,IAETD,QAAQd,aAAec,QAAQhD,gBAAkBgD,QAAQhB,OAASkB,MAElE,IAAIC,cAAeC,QAAQ,6BAEvB9C,cAAgBV,uBAAuBuD,cAEvCE,OAASD,QAAQ,SAEjB3B,QAAU7B,uBAAuByD,QAEjCC,gBAAkBF,QAAQ,mBAE1B7B,iBAAmB3B,uBAAuB0D,iBAE1CC,SAAWH,QAAQ,WAEnBhC,UAAYxB,uBAAuB2D,UAoEnCC,OACFxB,OAAQA,OACRhC,gBAAiBA,gBACjBkC,aAAcA,aAGhBc,SAAAA,WAAkBQ,MAClBR,QAAQhB,OAASA,OACjBgB,QAAQhD,gBAAkBA,gBAC1BgD,QAAQd,aAAeA","file":"youtube-video-status.min.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectStatus = exports.getResourceText = exports.status = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _ramda = require('ramda');\n\nvar _ramda2 = _interopRequireDefault(_ramda);\n\nvar _requestPromise = require('request-promise');\n\nvar _requestPromise2 = _interopRequireDefault(_requestPromise);\n\nvar _cheerio = require('cheerio');\n\nvar _cheerio2 = _interopRequireDefault(_cheerio);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getResourceText(vid) {\n  var selectors, options, $, $text;\n  return _regenerator2.default.async(function getResourceText$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          selectors = {\n            main: '#unavailable-message',\n            sub: '#unavailable-submessage'\n          };\n          options = {\n            uri: 'https://www.youtube.com/watch',\n            headers: { 'accept-language': 'en' },\n            qs: { v: vid },\n            transform: function transform(body) {\n              return _cheerio2.default.load(body);\n            }\n          };\n          _context.next = 4;\n          return _regenerator2.default.awrap((0, _requestPromise2.default)(options));\n\n        case 4:\n          $ = _context.sent;\n          $text = _ramda2.default.pipe($, _ramda2.default.invoker(0, 'text'));\n          return _context.abrupt('return', _ramda2.default.evolve({ main: $text, sub: $text }, selectors));\n\n        case 7:\n        case 'end':\n          return _context.stop();\n      }\n    }\n  }, null, this);\n}\n\nfunction status(vid) {\n  var obj;\n  return _regenerator2.default.async(function status$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regenerator2.default.awrap(getResourceText(vid));\n\n        case 2:\n          obj = _context2.sent;\n          return _context2.abrupt('return', detectStatus(obj));\n\n        case 4:\n        case 'end':\n          return _context2.stop();\n      }\n    }\n  }, null, this);\n}\n\nfunction detectStatus(obj) {\n  var combined = obj.main + obj.sub;\n  var isPrivate = _ramda2.default.test(/private/i);\n  var isAccessible = _ramda2.default.both(_ramda2.default.test(/unavailable/i), _ramda2.default.complement(_ramda2.default.test(/sorry/i)));\n  var isUnavailable = _ramda2.default.either(_ramda2.default.test(/not exist/i), _ramda2.default.both(_ramda2.default.test(/unavailable/i), _ramda2.default.test(/sorry/i)));\n\n  return _ramda2.default.cond([[isPrivate, _ramda2.default.always('private')], [isAccessible, _ramda2.default.always('accessible')], [isUnavailable, _ramda2.default.always('unavailable')], [_ramda2.default.T, _ramda2.default.always('unknown')]])(combined);\n}\n\nvar video = {\n  status: status,\n  getResourceText: getResourceText,\n  detectStatus: detectStatus\n};\n\nexports.default = video;\nexports.status = status;\nexports.getResourceText = getResourceText;\nexports.detectStatus = detectStatus;"],"sourceRoot":"/source/"}